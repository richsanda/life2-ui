[{"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js":"1","/Users/sg0307091/checkouts/life2-ui/src/App.tsx":"2","/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx":"3","/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx":"4","/Users/sg0307091/checkouts/life2-ui/src/index.tsx":"5","/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx":"6","/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx":"7","/Users/sg0307091/checkouts/life2-ui/src/contexts/NeatContext.tsx":"8","/Users/sg0307091/checkouts/life2-ui/src/pages/Life2.tsx":"9","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/CountGrid.tsx":"10","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/MonthBox.tsx":"11","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPanel.tsx":"12","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResults.tsx":"13","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResultRow.tsx":"14","/Users/sg0307091/checkouts/life2-ui/src/hooks/artifactApi.ts":"15","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactModal.tsx":"16","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageFeature.tsx":"17","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageDisplay.tsx":"18","/Users/sg0307091/checkouts/life2-ui/src/components/modal/EmailFeature.tsx":"19","/Users/sg0307091/checkouts/life2-ui/src/components/commentary/CommentaryBox.tsx":"20","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPane.tsx":"21","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultStyle.js":"22","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultMentionStyle.js":"23","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactNote.tsx":"24","/Users/sg0307091/checkouts/life2-ui/src/components/modal/CreateNoteDropdown.tsx":"25","/Users/sg0307091/checkouts/life2-ui/src/components/modal/NewArtifactButton.tsx":"26"},{"size":362,"mtime":1613833560872,"results":"27","hashOfConfig":"28"},{"size":760,"mtime":1644857239422,"results":"29","hashOfConfig":"28"},{"size":591,"mtime":1613861622665,"results":"30","hashOfConfig":"28"},{"size":810,"mtime":1644722222329,"results":"31","hashOfConfig":"28"},{"size":586,"mtime":1613861917064,"results":"32","hashOfConfig":"28"},{"size":1320,"mtime":1643421736461,"results":"33","hashOfConfig":"28"},{"size":2474,"mtime":1644884440896,"results":"34","hashOfConfig":"28"},{"size":734,"mtime":1644328515133,"results":"35","hashOfConfig":"28"},{"size":4030,"mtime":1645332007166,"results":"36","hashOfConfig":"28"},{"size":1038,"mtime":1644773722477,"results":"37","hashOfConfig":"28"},{"size":1765,"mtime":1644773718667,"results":"38","hashOfConfig":"28"},{"size":1609,"mtime":1644784592518,"results":"39","hashOfConfig":"28"},{"size":453,"mtime":1644774034862,"results":"40","hashOfConfig":"28"},{"size":3955,"mtime":1645382677293,"results":"41","hashOfConfig":"28"},{"size":3272,"mtime":1644858951683,"results":"42","hashOfConfig":"28"},{"size":6186,"mtime":1645382677293,"results":"43","hashOfConfig":"28"},{"size":853,"mtime":1643894639496,"results":"44","hashOfConfig":"28"},{"size":487,"mtime":1643941992087,"results":"45","hashOfConfig":"28"},{"size":869,"mtime":1643895803447,"results":"46","hashOfConfig":"28"},{"size":5273,"mtime":1644854929670,"results":"47","hashOfConfig":"28"},{"size":1593,"mtime":1644775697413,"results":"48","hashOfConfig":"28"},{"size":989,"mtime":1644364081324,"results":"49","hashOfConfig":"28"},{"size":52,"mtime":1644364056753,"results":"50","hashOfConfig":"28"},{"size":1498,"mtime":1644882840849,"results":"51","hashOfConfig":"28"},{"size":1178,"mtime":1644720750224,"results":"52","hashOfConfig":"28"},{"size":1341,"mtime":1644882840848,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"qqguvf",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"59"},"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js",[],["114","115"],"/Users/sg0307091/checkouts/life2-ui/src/App.tsx",[],["116","117"],"/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/index.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/contexts/NeatContext.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/pages/Life2.tsx",["118","119","120","121"],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/CountGrid.tsx",["122","123"],"import React, { useContext, useState } from \"react\";\nimport { rangeOfMonths } from \"../../utils/data.json\";\nimport MonthBox from \"./MonthBox\"\nimport '../../styles/styles.css'\n\nconst CountGrid = (props) => {\n\n    const { searchText, countsResponse, maxBoxCount, setSearchResponse } = props;\n\n    return (\n        <div className=\"grid\" id=\"counts\">\n            <div className=\"plain-month-box\">&nbsp;</div>\n            {rangeOfMonths.map((m, index) => {\n                return (\n                    <div key={`${index}`} className=\"plain-month-box\" data-ng-repeat=\"m in rangeOfMonths\">{m}</div>\n                );\n            })}\n            {countsResponse.map((monthBox, index) => {\n                return (\n                    <MonthBox \n                    searchText={searchText}\n                    key={`${monthBox.year}.${monthBox.month}.${index}`} \n                    monthBox={monthBox} \n                    selected={false} \n                    maxBoxCount={maxBoxCount}\n                    setSearchResponse={setSearchResponse} />\n                )\n            })}\n        </div>\n    );\n};\n\nexport default CountGrid;","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/MonthBox.tsx",["124","125","126","127","128","129","130"],"import React, { useState } from \"react\";\nimport { ArtifactSearchRequest } from \"../../models\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport { startOfMonth, endOfMonth } from \"../../utils/Utils\";\nimport { artifactSearch } from \"../../utils/requestTemplates.json\";\n\nconst MonthBox = (props) => {\n\n    const [searchRequest, setSearchRequest] = useState<ArtifactSearchRequest>(artifactSearch);\n    const [from, setFrom] = useState<string[]>([]);\n    const [to, setTo] = useState<string[]>([]);\n\n    const { searchText, monthBox, selected, index, maxBoxCount, setSearchResponse } = props;\n    const { count, year, month, header} = monthBox;\n    const after = startOfMonth(year, month);\n    const before = endOfMonth(year, month)\n    const request: ArtifactSearchRequest = {\n        ...searchRequest,\n        \"after\" : after,\n        \"before\" : before,\n        \"from\" : from,\n        \"to\" : to,\n        \"text\" : searchText\n    }\n\n    const opacity = !header && count != 0 ? 0.1 + count * 1.2  / maxBoxCount : 1;\n\n    const monthBoxClick = async () => {\n\n        ArtifactAPI.artifactSearch(request)\n            .then((response) => {\n                setSearchResponse(response);\n            })\n            .catch(() => {\n                alert(\"error\");\n            });\n    };\n\n    let className = index == selected ? 'selected-month-box' : count && !header ? 'month-box' : 'plain-month-box';\n    return (\n        <div\n            className={`${className}`}\n            style={{ opacity: opacity? opacity : 1}}\n            key={`${year}.${month}.${count}`}\n            onClick={monthBoxClick}\n            title={`${month}.${year}: ${count}`}\n        >\n            {header && year.toString().substr(2, 3) || ''} \n        </div>\n    )\n\n}\n\nexport default MonthBox;","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPanel.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResults.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResultRow.tsx",["131"],"import React, { useContext, useState } from \"react\";\nimport { prettyDate } from \"../../utils/Utils\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport '../../styles/styles.css';\nimport '../../styles/magnifier.less';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ArtifactModal from \"../modal/ArtifactModal\";\n\nconst ResultRow = (props) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const handleSave = () => { handleClose(); updateNote(); }\n\n    const { artifact, index } = props;\n\n    const [artifactData, setArtfactData] = useState(artifact);\n    const [commentary, setCommentary] = useState('');\n    const [notes, setNotes] = useState([]);\n    const [relativeKeys, setRelativeKeys] = useState<string[]>([]);\n    const [relativeKeyIndex, setRelativeKeyIndex] = useState(0);\n\n    const resultRowClick = async () => {\n\n        retrieveArtifact(\n            artifact.trove,\n            artifact.key,\n            true,\n            (response) => {\n                setArtfactData(response);\n                setCommentary(response.description);\n                setNotes(response.notes);\n                setRelativeKeys(response.relative_keys || [artifact.trove + \"/\" + artifact.key]);\n                setRelativeKeyIndex(response.relative_key_index || 0);\n                handleShow();\n            });\n    };\n\n    const handleSelect = (newIndex) => {\n\n        updateNote();\n\n        const troveAndKey = relativeKeys[newIndex].split(\"/\");\n\n        retrieveArtifact(\n            troveAndKey[0],\n            troveAndKey[1],\n            false,\n            (response) => {\n                setArtfactData(response);\n                setCommentary(response.description);\n                setNotes(response.notes);\n                setRelativeKeyIndex(newIndex);\n            });\n    };\n\n    const retrieveArtifact = (trove, key, relatives, callback) => {\n\n        if (trove === \"life2\") {\n            ArtifactAPI.noteRead(trove, key, relatives)\n                .then(callback)\n                .catch((e) => {\n                    alert(\"error retrieving artifact with id: \" + key + \" \" + e);\n                });\n        } else {\n\n            ArtifactAPI.artifactRead(trove, key, relatives)\n                .then(callback)\n                .catch((e) => {\n                    alert(\"error retrieving artifact with id: \" + key + \" \" + e);\n                });\n        }\n    }\n\n    const updateNote = () => {\n\n        const troveAndKey = relativeKeys[relativeKeyIndex].split(\"/\");\n        const trove = troveAndKey[0];\n        const key = troveAndKey[1];\n\n        const updatedNote = {\n            trove: trove,\n            key: key,\n            text: commentary,\n            notes: notes\n        }\n\n        ArtifactAPI.updateNote(trove, key, updatedNote)\n            .then((response) => {\n                console.log(\"updated note: \" + trove + \"/\" + key)\n            })\n    }\n\n    return (\n        <>\n            <div className=\"artifact-link\" key={`artifact${index}`}>\n                <div onClick={resultRowClick}>\n                    <div className=\"artifact-link-col\">\n                        {`${index + 1}. `}\n                        {`${artifact?.when_display || prettyDate(artifact.when)} — ${artifact.trove} — ${artifact.title || artifact.key} `}\n                    </div>\n                </div>\n            </div>\n            <ArtifactModal\n                show={show}\n                commentary={commentary}\n                notes={notes}\n                relativeKeys={relativeKeys}\n                relativeKeyIndex={relativeKeyIndex}\n                handleSelect={handleSelect}\n                handleChange={(e, val) => setCommentary(val)}\n                setNotes={setNotes}\n                handleClose={handleClose}\n                handleSave={handleSave}\n                artifact={artifactData} />\n        </>\n    )\n}\n\nexport default ResultRow;","/Users/sg0307091/checkouts/life2-ui/src/hooks/artifactApi.ts",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactModal.tsx",["132"],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageFeature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageDisplay.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/EmailFeature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/commentary/CommentaryBox.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPane.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/styles/defaultStyle.js",["133"],"export default {\n    control: {\n      backgroundColor: '#fff',\n      fontSize: \"0.8em\",\n      fontWeight: 'normal',\n    },\n  \n    '&multiLine': {\n      control: {\n        fontFamily: 'monospace',\n        minHeight: 63,\n      },\n      highlighter: {\n        padding: 9,\n        border: '1px solid transparent',\n      },\n      input: {\n        padding: 9,\n        border: '1px solid silver',\n      },\n    },\n  \n    '&singleLine': {\n      display: 'inline-block',\n      width: 180,\n  \n      highlighter: {\n        padding: 1,\n        border: '2px inset transparent',\n      },\n      input: {\n        padding: 1,\n        border: '2px inset',\n      },\n    },\n  \n    suggestions: {\n      list: {\n        backgroundColor: 'white',\n        border: '1px solid rgba(0,0,0,0.15)',\n        fontSize: \"0.8em\",\n      },\n      item: {\n        padding: '5px 15px',\n        borderBottom: '1px solid rgba(0,0,0,0.15)',\n        '&focused': {\n          backgroundColor: '#cee4e5',\n        }\n      },\n    },\n  }","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultMentionStyle.js",["134"],"export default {\n    backgroundColor: '#cee4e5',\n  }","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactNote.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/CreateNoteDropdown.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/NewArtifactButton.tsx",["135"],"import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport Life2 from \"../../pages/Life2\";\nimport ArtifactModal from \"./ArtifactModal\";\n\nconst NewArtifactButton = (props) => {\n\n    const { onSave } = props;\n\n    const [show, setShow] = useState(false);\n    const handleAdd = () => { setCommentary(''); setNotes([]); setShow(true); }\n    const handleClose = () => { setShow(false); }\n    const handleSave = () => { handleClose(); addNote(); onSave(); }\n\n    const [commentary, setCommentary] = useState('');\n    const [notes, setNotes] = useState<string[]>([])\n\n    const addNote = () => {\n\n        const trove = \"life2\";\n        let updatedNote = {\n          trove: trove,\n          text: commentary,\n          notes: notes\n        }\n    \n        ArtifactAPI.addNote(trove, updatedNote);\n      }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleAdd}>add</Button>\n            <ArtifactModal\n                show={show}\n                commentary={commentary}\n                handleChange={(e, val) => setCommentary(val)}\n                notes={notes}\n                setNotes={setNotes}\n                handleClose={handleClose}\n                handleSave={handleSave}\n            />\n        </>\n    )\n}\n\nexport default NewArtifactButton;",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":20,"column":27,"nodeType":"142","messageId":"143","endLine":20,"endColumn":43},{"ruleId":"140","severity":1,"message":"144","line":22,"column":27,"nodeType":"142","messageId":"143","endLine":22,"endColumn":43},{"ruleId":"140","severity":1,"message":"145","line":25,"column":18,"nodeType":"142","messageId":"143","endLine":25,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":26,"column":16,"nodeType":"142","messageId":"143","endLine":26,"endColumn":21},{"ruleId":"140","severity":1,"message":"147","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":27},{"ruleId":"140","severity":1,"message":"148","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":37},{"ruleId":"140","severity":1,"message":"144","line":9,"column":27,"nodeType":"142","messageId":"143","endLine":9,"endColumn":43},{"ruleId":"140","severity":1,"message":"145","line":10,"column":18,"nodeType":"142","messageId":"143","endLine":10,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":11,"column":16,"nodeType":"142","messageId":"143","endLine":11,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":26,"column":38,"nodeType":"151","messageId":"152","endLine":26,"endColumn":40},{"ruleId":"149","severity":1,"message":"153","line":39,"column":27,"nodeType":"151","messageId":"152","endLine":39,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":48,"column":21,"nodeType":"156","messageId":"157","endLine":48,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":48,"column":53,"nodeType":"156","messageId":"157","endLine":48,"endColumn":55},{"ruleId":"140","severity":1,"message":"147","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":50,"column":43,"nodeType":"151","messageId":"152","endLine":50,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":1,"column":1,"nodeType":"160","endLine":51,"endColumn":4},{"ruleId":"158","severity":1,"message":"159","line":1,"column":1,"nodeType":"160","endLine":3,"endColumn":4},{"ruleId":"140","severity":1,"message":"161","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'setCountsRequest' is assigned a value but never used.","Identifier","unusedVar","'setSearchRequest' is assigned a value but never used.","'setFrom' is assigned a value but never used.","'setTo' is assigned a value but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Life2' is defined but never used.","no-global-assign","no-unsafe-negation"]