[{"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js":"1","/Users/sg0307091/checkouts/life2-ui/src/App.tsx":"2","/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx":"3","/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx":"4","/Users/sg0307091/checkouts/life2-ui/src/index.tsx":"5","/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx":"6","/Users/sg0307091/checkouts/life2-ui/src/pages/Life2.tsx":"7","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/CountGrid.tsx":"8","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/MonthBox.tsx":"9","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPanel.tsx":"10","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResults.tsx":"11","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResultRow.tsx":"12","/Users/sg0307091/checkouts/life2-ui/src/hooks/artifactApi.ts":"13","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactModal.tsx":"14","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageFeature.tsx":"15","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageDisplay.tsx":"16","/Users/sg0307091/checkouts/life2-ui/src/components/modal/EmailFeature.tsx":"17","/Users/sg0307091/checkouts/life2-ui/src/components/commentary/CommentaryBox.tsx":"18","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPane.tsx":"19","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultStyle.js":"20","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultMentionStyle.js":"21","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactNote.tsx":"22","/Users/sg0307091/checkouts/life2-ui/src/components/modal/CreateNoteDropdown.tsx":"23","/Users/sg0307091/checkouts/life2-ui/src/components/modal/NewArtifactButton.tsx":"24"},{"size":362,"mtime":1613833560872,"results":"25","hashOfConfig":"26"},{"size":417,"mtime":1645837482683,"results":"27","hashOfConfig":"26"},{"size":591,"mtime":1613861622665,"results":"28","hashOfConfig":"26"},{"size":810,"mtime":1644722222329,"results":"29","hashOfConfig":"26"},{"size":586,"mtime":1613861917064,"results":"30","hashOfConfig":"26"},{"size":3066,"mtime":1646010484413,"results":"31","hashOfConfig":"26"},{"size":4915,"mtime":1645821515939,"results":"32","hashOfConfig":"26"},{"size":1082,"mtime":1645671514685,"results":"33","hashOfConfig":"26"},{"size":1563,"mtime":1645671514686,"results":"34","hashOfConfig":"26"},{"size":1619,"mtime":1645821516006,"results":"35","hashOfConfig":"26"},{"size":657,"mtime":1645830644928,"results":"36","hashOfConfig":"26"},{"size":4659,"mtime":1645900264689,"results":"37","hashOfConfig":"26"},{"size":3272,"mtime":1644858951683,"results":"38","hashOfConfig":"26"},{"size":6433,"mtime":1645821515939,"results":"39","hashOfConfig":"26"},{"size":853,"mtime":1643894639496,"results":"40","hashOfConfig":"26"},{"size":487,"mtime":1643941992087,"results":"41","hashOfConfig":"26"},{"size":869,"mtime":1643895803447,"results":"42","hashOfConfig":"26"},{"size":5414,"mtime":1646019295320,"results":"43","hashOfConfig":"26"},{"size":1663,"mtime":1645821516031,"results":"44","hashOfConfig":"26"},{"size":989,"mtime":1644364081324,"results":"45","hashOfConfig":"26"},{"size":52,"mtime":1644364056753,"results":"46","hashOfConfig":"26"},{"size":1498,"mtime":1644882840849,"results":"47","hashOfConfig":"26"},{"size":4138,"mtime":1646019777172,"results":"48","hashOfConfig":"26"},{"size":1501,"mtime":1645821515939,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"qqguvf",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"57"},"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js",[],["106","107"],"/Users/sg0307091/checkouts/life2-ui/src/App.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx",[],["108","109"],"/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/index.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/pages/Life2.tsx",["110","111"],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/CountGrid.tsx",["112","113"],"import React, { useContext, useState } from \"react\";\nimport { rangeOfMonths } from \"../../utils/data.json\";\nimport MonthBox from \"./MonthBox\"\nimport '../../styles/styles.css'\n\nconst CountGrid = (props) => {\n\n    const { searchText, countsResponse, maxBoxCount, setSearchResponse } = props;\n\n    return (\n        <div className=\"grid\" id=\"counts\">\n            <div className=\"plain-month-box\">&nbsp;</div>\n            {rangeOfMonths.map((m, index) => {\n                return (\n                    <div key={`${index}`} className=\"plain-month-box\" data-ng-repeat=\"m in rangeOfMonths\">{m}</div>\n                );\n            })}\n            {countsResponse.map((monthBox, index) => {\n                return (\n                    <MonthBox \n                    searchText={searchText}\n                    key={`${monthBox.year}.${monthBox.month}.${index}`} \n                    monthBox={monthBox} \n                    selected={false} \n                    maxBoxCount={maxBoxCount}\n                    setSearchResponse={setSearchResponse} />\n                )\n            })}\n        </div>\n    );\n};\n\nexport default CountGrid;","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/MonthBox.tsx",["114","115","116","117","118","119","120"],"import React, { useState } from \"react\";\nimport { ArtifactSearchRequest } from \"../../models\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport { startOfMonth, endOfMonth } from \"../../utils/Utils\";\nimport { artifactSearch } from \"../../utils/requestTemplates.json\";\n\nconst MonthBox = (props) => {\n\n    const [searchRequest, setSearchRequest] = useState<ArtifactSearchRequest>(artifactSearch);\n    const [from, setFrom] = useState<string[]>([]);\n    const [to, setTo] = useState<string[]>([]);\n\n    const { searchText, monthBox, selected, index, maxBoxCount, setSearchResponse } = props;\n    const { count, year, month, header} = monthBox;\n    const after = startOfMonth(year, month);\n    const before = endOfMonth(year, month)\n    const request: ArtifactSearchRequest = {\n        ...searchRequest,\n        \"after\" : after,\n        \"before\" : before,\n        \"from\" : from,\n        \"to\" : to,\n        \"text\" : searchText\n    }\n\n    const opacity = !header && count != 0 ? 0.1 + count * 1.2  / maxBoxCount : 1;\n\n    const monthBoxClick = async () => {\n\n        ArtifactAPI.artifactSearch(request)\n            .then((response) => {\n                setSearchResponse(response);\n            })\n            .catch(() => {\n                alert(\"error\");\n            });\n    };\n\n    let className = index == selected ? 'selected-month-box' : count && !header ? 'month-box' : 'plain-month-box';\n    return (\n        <div\n            className={`${className}`}\n            style={{ opacity: opacity? opacity : 1}}\n            key={`${year}.${month}.${count}`}\n            onClick={monthBoxClick}\n            title={`${month}.${year}: ${count}`}\n        >\n            {header && year.toString().substr(2, 3) || ''} \n        </div>\n    )\n\n}\n\nexport default MonthBox;","/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPanel.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResults.tsx",["121"],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchResultRow.tsx",["122","123","124","125"],"/Users/sg0307091/checkouts/life2-ui/src/hooks/artifactApi.ts",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactModal.tsx",["126"],"import { prettyDate, prettyNote } from \"../../utils/Utils\";\nimport { Accordion, Button, Modal } from \"react-bootstrap\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport '../../styles/styles.css';\nimport '../../styles/magnifier.less';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ArtifactImageFeature from \"./ArtifactImageFeature\";\nimport EmailFeature from \"./EmailFeature\";\nimport CommentaryBox from \"../commentary/CommentaryBox\";\nimport { useEffect, useState } from \"react\";\nimport { Person, Tag } from \"../../models\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport ArtifactNote from \"./ArtifactNote\";\nimport CreateNoteDropdown from \"./CreateNoteDropdown\";\n\nconst ArtifactModal = (props) => {\n\n    const {\n        show,\n        artifact,\n        commentary,\n        setCommentary,\n        notes = [],\n        setNotes,\n        relativeKeys,\n        relativeKeyIndex,\n        handleSelect,\n        handleChange,\n        handleSave,\n        handleClose,\n        numUpdates } = props;\n\n    const [personOptions, setPersonOptions] = useState<Person[]>([]);\n    const [tagOptions, setTagOptions] = useState<Tag[]>([]);\n\n    useEffect(() => {\n        ArtifactAPI.persons().then((response) => {\n            setPersonOptions(response);\n        })\n        ArtifactAPI.tags().then((response) => {\n            setTagOptions(response);\n        })\n    }, [numUpdates])\n\n    const [activeKey, setActiveKey] = useState<number>(0);\n\n    const onCreateNote = (content) => {\n        if (commentary) {\n            addNote(content);\n        } else {\n            setCommentary(content);\n        }\n    }\n\n    const addNote = (content) => {\n        setNotes([...notes, content]); setActiveKey(notes.length);\n    }\n\n    const removeNote = (removeKey) => {\n        setNotes(notes.filter((n, i) => i != removeKey));\n        setActiveKey(-1);\n    }\n\n    const toggleNote = (toggleKey) => {\n        if (activeKey === toggleKey) {\n            setActiveKey(-1);\n        } else {\n            setActiveKey(toggleKey);\n        }\n    }\n\n    return (\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n            <Modal.Header>\n                <Modal.Title>\n                    {\n                        (!!!artifact?.types) && commentary ? (prettyNote(commentary.split('\\n')[0])) :\n                            (<>{artifact?.when_display || prettyDate(artifact?.when)} &#8212; {artifact?.title}</>)\n                    }\n                </Modal.Title>\n                <Button style={{ fontSize: \".75em\" }} variant=\"primary\" onClick={handleSave}>\n                    save\n                </Button>\n            </Modal.Header>\n            <Modal.Body>\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"8\">\n                            {\n                                (!!!artifact?.types) ? (\n\n                                    <CommentaryBox\n                                        value={commentary}\n                                        onChange={handleChange}\n                                        personOptions={personOptions}\n                                        tagOptions={tagOptions}\n                                        onAdd={() => { }}\n                                    />\n\n                                ) : (artifact.types.indexOf(\"email\") > -1) ? (\n\n                                    <EmailFeature artifact={artifact} />\n\n                                ) : (artifact.types.indexOf(\"neat\") > -1) ?\n\n                                    (<ArtifactImageFeature\n                                        artifact={artifact}\n                                        relativeKeys={relativeKeys}\n                                        relativeKeyIndex={relativeKeyIndex}\n                                        handleSelect={handleSelect}\n                                    />\n\n                                    ) :\n\n                                    <></>\n                            }\n                        </MDBCol>\n                        <MDBCol md=\"4\">\n                            <MDBRow style={{ padding: \"8px\" }}>\n                                <CreateNoteDropdown onCreateNote={onCreateNote} />\n                            </MDBRow>\n                            <MDBRow>\n                                {(artifact?.types) ? (\n                                    <CommentaryBox\n                                        value={commentary}\n                                        onChange={handleChange}\n                                        personOptions={personOptions}\n                                        tagOptions={tagOptions}\n                                        onAdd={() => { }}\n                                    />\n                                ) : (<></>)}\n                            </MDBRow>\n                            <MDBRow>\n                                <Accordion activeKey={\"\" + activeKey} defaultActiveKey={null}>\n\n                                    {\n                                        notes ?\n                                            notes.map((n, i) => {\n\n                                                return (<ArtifactNote\n                                                    content={n}\n                                                    index={i}\n                                                    key={\"note\" + i}\n                                                    toggleNote={toggleNote}\n                                                    removeNote={removeNote}\n                                                    personOptions={personOptions}\n                                                    tagOptions={tagOptions}\n                                                    onChange={(e, val) => {\n                                                        let tmp = [...notes];\n                                                        tmp[i] = val;\n                                                        setNotes(tmp);\n                                                    }}\n                                                />);\n                                            }) :\n                                            <></>}\n                                </Accordion>\n                            </MDBRow>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </Modal.Body>\n        </Modal >\n    )\n}\n\nexport default ArtifactModal;","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageFeature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactImageDisplay.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/EmailFeature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/commentary/CommentaryBox.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Life2/SearchPane.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/styles/defaultStyle.js",["127"],"export default {\n    control: {\n      backgroundColor: '#fff',\n      fontSize: \"0.8em\",\n      fontWeight: 'normal',\n    },\n  \n    '&multiLine': {\n      control: {\n        fontFamily: 'monospace',\n        minHeight: 63,\n      },\n      highlighter: {\n        padding: 9,\n        border: '1px solid transparent',\n      },\n      input: {\n        padding: 9,\n        border: '1px solid silver',\n      },\n    },\n  \n    '&singleLine': {\n      display: 'inline-block',\n      width: 180,\n  \n      highlighter: {\n        padding: 1,\n        border: '2px inset transparent',\n      },\n      input: {\n        padding: 1,\n        border: '2px inset',\n      },\n    },\n  \n    suggestions: {\n      list: {\n        backgroundColor: 'white',\n        border: '1px solid rgba(0,0,0,0.15)',\n        fontSize: \"0.8em\",\n      },\n      item: {\n        padding: '5px 15px',\n        borderBottom: '1px solid rgba(0,0,0,0.15)',\n        '&focused': {\n          backgroundColor: '#cee4e5',\n        }\n      },\n    },\n  }","/Users/sg0307091/checkouts/life2-ui/src/styles/defaultMentionStyle.js",["128"],"export default {\n    backgroundColor: '#cee4e5',\n  }","/Users/sg0307091/checkouts/life2-ui/src/components/modal/ArtifactNote.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/CreateNoteDropdown.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/modal/NewArtifactButton.tsx",["129"],"import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ArtifactAPI from \"../../hooks/artifactApi\";\nimport Life2 from \"../../pages/Life2\";\nimport ArtifactModal from \"./ArtifactModal\";\n\nconst NewArtifactButton = (props) => {\n\n    const { onUpdate } = props;\n\n    const [show, setShow] = useState(false);\n    const handleAdd = () => { setCommentary(''); setNotes([]); setShow(true); }\n    const handleClose = () => { setShow(false); }\n    const handleSave = () => { handleClose(); addNote(); }\n\n    const [commentary, setCommentary] = useState('');\n    const [notes, setNotes] = useState<string[]>([])\n\n    const addNote = () => {\n\n        const trove = \"life2\";\n        let updatedNote = {\n            trove: trove,\n            text: commentary,\n            notes: notes\n        }\n\n        ArtifactAPI.addNote(trove, updatedNote)\n            .then((response) => {\n                console.log(\"added new note\")\n                onUpdate();\n            })\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleAdd}>add</Button>\n            <ArtifactModal\n                show={show}\n                commentary={commentary}\n                setCommentary={setCommentary}\n                handleChange={(e, val) => setCommentary(val)}\n                notes={notes}\n                setNotes={setNotes}\n                handleClose={handleClose}\n                handleSave={handleSave}\n            />\n        </>\n    )\n}\n\nexport default NewArtifactButton;",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":31},{"ruleId":"134","severity":1,"message":"138","line":8,"column":57,"nodeType":"136","messageId":"137","endLine":8,"endColumn":78},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"140","line":1,"column":29,"nodeType":"136","messageId":"137","endLine":1,"endColumn":37},{"ruleId":"134","severity":1,"message":"141","line":9,"column":27,"nodeType":"136","messageId":"137","endLine":9,"endColumn":43},{"ruleId":"134","severity":1,"message":"142","line":10,"column":18,"nodeType":"136","messageId":"137","endLine":10,"endColumn":25},{"ruleId":"134","severity":1,"message":"143","line":11,"column":16,"nodeType":"136","messageId":"137","endLine":11,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":26,"column":38,"nodeType":"146","messageId":"147","endLine":26,"endColumn":40},{"ruleId":"144","severity":1,"message":"148","line":39,"column":27,"nodeType":"146","messageId":"147","endLine":39,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":48,"column":21,"nodeType":"151","messageId":"152","endLine":48,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":48,"column":53,"nodeType":"151","messageId":"152","endLine":48,"endColumn":55},{"ruleId":"134","severity":1,"message":"153","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"154","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":8,"column":18,"nodeType":"136","messageId":"137","endLine":8,"endColumn":24},{"ruleId":"134","severity":1,"message":"155","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":59,"column":43,"nodeType":"146","messageId":"147","endLine":59,"endColumn":45},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","endLine":51,"endColumn":4},{"ruleId":"156","severity":1,"message":"157","line":1,"column":1,"nodeType":"158","endLine":3,"endColumn":4},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'ArtifactCountsRequest' is defined but never used.","Identifier","unusedVar","'ArtifactSearchRequest' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'setSearchRequest' is assigned a value but never used.","'setFrom' is assigned a value but never used.","'setTo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'moment' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Life2' is defined but never used.","no-global-assign","no-unsafe-negation"]