[{"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js":"1","/Users/sg0307091/checkouts/life2-ui/src/App.tsx":"2","/Users/sg0307091/checkouts/life2-ui/src/pages/index.ts":"3","/Users/sg0307091/checkouts/life2-ui/src/pages/Home.tsx":"4","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Feature.tsx":"5","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Counts.tsx":"6","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Results.tsx":"7","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Inputs.tsx":"8","/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx":"9","/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx":"10","/Users/sg0307091/checkouts/life2-ui/src/index.tsx":"11","/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx":"12","/Users/sg0307091/checkouts/life2-ui/src/hooks/correspondenceApi.ts":"13"},{"size":362,"mtime":1613833560872,"results":"14","hashOfConfig":"15"},{"size":949,"mtime":1613873257922,"results":"16","hashOfConfig":"15"},{"size":46,"mtime":1613851805126,"results":"17","hashOfConfig":"15"},{"size":422,"mtime":1613851097183,"results":"18","hashOfConfig":"15"},{"size":659,"mtime":1613851457213,"results":"19","hashOfConfig":"15"},{"size":1122,"mtime":1613851097183,"results":"20","hashOfConfig":"15"},{"size":712,"mtime":1613851097183,"results":"21","hashOfConfig":"15"},{"size":1152,"mtime":1613873821007,"results":"22","hashOfConfig":"15"},{"size":591,"mtime":1613861622665,"results":"23","hashOfConfig":"15"},{"size":810,"mtime":1613854315678,"results":"24","hashOfConfig":"15"},{"size":586,"mtime":1613861917064,"results":"25","hashOfConfig":"15"},{"size":1073,"mtime":1613872135246,"results":"26","hashOfConfig":"15"},{"size":2317,"mtime":1613873251307,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7xp2xm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js",[],["59","60"],"/Users/sg0307091/checkouts/life2-ui/src/App.tsx",["61"],"import React, { FunctionComponent, useState, useEffect, useContext } from \"react\";\nimport \"./styles/styles.css\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { Home } from \"./pages\";\nimport ArtifactCountsContext from \"./contexts/ArtifactContext\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport CorrespondenceAPI from \"./hooks/correspondenceApi\";\n\nconst App: FunctionComponent<{}> = () => {\n\n  useEffect(() => {\n    let token = CorrespondenceAPI.getAuthorizationToken();\n    sessionStorage.setItem(\"token\", token);\n  }, []);\n\n  const [defaultValue] = useContext(ArtifactCountsContext);\n  const artifactCountsRequest = useState(defaultValue);\n\n  return (\n\n    <ErrorBoundary>\n      <ArtifactCountsContext.Provider value={artifactCountsRequest}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </ArtifactCountsContext.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n",["62","63"],"/Users/sg0307091/checkouts/life2-ui/src/pages/index.ts",[],"/Users/sg0307091/checkouts/life2-ui/src/pages/Home.tsx",["64"],"import React, { useEffect } from \"react\";\nimport Counts from \"../components/Home/Counts\";\nimport Inputs from \"../components/Home/Inputs\";\nimport Results from \"../components/Home/Results\";\nimport Feature from \"../components/Home/Feature\";\n\nconst Home = () => {\n    return (\n        <>\n            <Inputs />\n            <Counts />\n            <Results />\n            <Feature />\n        </>\n    );\n};\n\nexport default Home;\n","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Feature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Home/Counts.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Home/Results.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Home/Inputs.tsx",["65","66"],"/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/index.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/hooks/correspondenceApi.ts",["67"],"import {\n  ArtifactCountsRequest,\n  ArtifactCountsResponse,\n  ArtifactSearchRequest,\n  ArtifactSearchResponse,\n  ArtifactReadResponse\n} from \"../models\";\n\ninterface ICorrespondenceAPI {\n  getAuthorizationToken: () => Promise<string>;\n  artifactCounts: (body: ArtifactCountsRequest) => Promise<ArtifactCountsResponse>;\n  artifactSearch: (body: ArtifactSearchRequest) => Promise<ArtifactSearchResponse>;\n  artifactRead: (trove: string, key: string) => Promise<ArtifactReadResponse>;\n}\n\nclass CorrespondenceAPI {\n  public static getAuthorizationToken = () => {\n    /* let response = await axios.post<AuthResponse>('https://api.tsts.havail.sabre.com/v2/auth/token', 'grant_type=client_credentials', {\n            headers: {\n                'Authorization': 'Basic VmpFNldEQkVXRVV5VTBjNldEQTZXREE9OlJGaEZNbE5IV0RBPQ==',\n                'Accept': '',\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'ttl_seconds': '3600'\n            },\n        }) */\n    return \"cmljaDp5YWhkdWRlNDc0Nw==\";\n  }\n\n  public static artifactCounts = async (body: ArtifactCountsRequest) => {\n    let response = await CorrespondenceAPI.request<ArtifactCountsResponse, ArtifactCountsRequest>(\n      \"artifact/counts\",\n      \"post\",\n      body\n    );\n    return response;\n  };\n\n  public static artifactSearch = async (body: ArtifactSearchRequest) => {\n    let response = await CorrespondenceAPI.request<ArtifactSearchResponse, ArtifactSearchRequest>(\n      \"/artifacts\",\n      \"post\",\n      body\n    );\n    return response;\n  };\n\n  public static artifactRead = async (trove: string, key: string) => {\n    let response = await CorrespondenceAPI.request<ArtifactReadResponse>(`/artifact/rich.s/${trove}/${key}`);\n    return response;\n  };\n\n  private static request = async <T, B = void>(\n    url: string,\n    method = \"get\",\n    body: B | undefined = undefined,\n    headers = {}\n  ): Promise<T> => {\n    const res = await fetch(url, {\n      method: method.toUpperCase(),\n      body: typeof body === \"object\" ? JSON.stringify(body) : undefined,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${sessionStorage.getItem(\"token\")}`\n      },\n    });\n    let data = await res.json();\n    return data;\n  };\n}\n\nexport default CorrespondenceAPI;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":25,"nodeType":"74","messageId":"75","endLine":3,"endColumn":35},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":7,"column":30,"nodeType":"74","messageId":"75","endLine":7,"endColumn":49},{"ruleId":"72","severity":1,"message":"78","line":10,"column":12,"nodeType":"74","messageId":"75","endLine":10,"endColumn":17},{"ruleId":"72","severity":1,"message":"79","line":9,"column":11,"nodeType":"74","messageId":"75","endLine":9,"endColumn":29},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setArtifactsContext' is assigned a value but never used.","'token' is assigned a value but never used.","'ICorrespondenceAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]