[{"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js":"1","/Users/sg0307091/checkouts/life2-ui/src/App.tsx":"2","/Users/sg0307091/checkouts/life2-ui/src/pages/index.ts":"3","/Users/sg0307091/checkouts/life2-ui/src/pages/Home.tsx":"4","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Feature.tsx":"5","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Counts.tsx":"6","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Results.tsx":"7","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Inputs.tsx":"8","/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx":"9","/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx":"10","/Users/sg0307091/checkouts/life2-ui/src/index.tsx":"11","/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx":"12","/Users/sg0307091/checkouts/life2-ui/src/hooks/correspondenceApi.ts":"13","/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx":"14","/Users/sg0307091/checkouts/life2-ui/src/components/Home/MonthBox.tsx":"15","/Users/sg0307091/checkouts/life2-ui/src/components/Home/ResultRow.tsx":"16","/Users/sg0307091/checkouts/life2-ui/src/pages/Neat.tsx":"17","/Users/sg0307091/checkouts/life2-ui/src/hooks/neatApi.ts":"18","/Users/sg0307091/checkouts/life2-ui/src/contexts/NeatContext.tsx":"19","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/NeatFolder.tsx":"20","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/Results.tsx":"21","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/NeatItem.tsx":"22","/Users/sg0307091/checkouts/life2-ui/src/utils/NeatUtils.tsx":"23","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/FolderPane.tsx":"24","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/ListPane.tsx":"25","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/FeaturePane.tsx":"26","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/CommentaryPane.tsx":"27"},{"size":362,"mtime":1613833560872,"results":"28","hashOfConfig":"29"},{"size":1315,"mtime":1614449707755,"results":"30","hashOfConfig":"29"},{"size":46,"mtime":1613851805126,"results":"31","hashOfConfig":"29"},{"size":422,"mtime":1613851097183,"results":"32","hashOfConfig":"29"},{"size":1145,"mtime":1614041048205,"results":"33","hashOfConfig":"29"},{"size":2083,"mtime":1614007444053,"results":"34","hashOfConfig":"29"},{"size":1197,"mtime":1614039010671,"results":"35","hashOfConfig":"29"},{"size":2435,"mtime":1614046147954,"results":"36","hashOfConfig":"29"},{"size":591,"mtime":1613861622665,"results":"37","hashOfConfig":"29"},{"size":810,"mtime":1613854315678,"results":"38","hashOfConfig":"29"},{"size":586,"mtime":1613861917064,"results":"39","hashOfConfig":"29"},{"size":1348,"mtime":1614043081159,"results":"40","hashOfConfig":"29"},{"size":2290,"mtime":1615089623189,"results":"41","hashOfConfig":"29"},{"size":2047,"mtime":1614041034360,"results":"42","hashOfConfig":"29"},{"size":2013,"mtime":1614044108290,"results":"43","hashOfConfig":"29"},{"size":1434,"mtime":1614042113707,"results":"44","hashOfConfig":"29"},{"size":952,"mtime":1615089280346,"results":"45","hashOfConfig":"29"},{"size":1531,"mtime":1614442939310,"results":"46","hashOfConfig":"29"},{"size":740,"mtime":1615075122122,"results":"47","hashOfConfig":"29"},{"size":1556,"mtime":1615088572208,"results":"48","hashOfConfig":"29"},{"size":1224,"mtime":1615089280346,"results":"49","hashOfConfig":"29"},{"size":1946,"mtime":1615088572232,"results":"50","hashOfConfig":"29"},{"size":910,"mtime":1615075563260,"results":"51","hashOfConfig":"29"},{"size":597,"mtime":1615088572208,"results":"52","hashOfConfig":"29"},{"size":576,"mtime":1615088572208,"results":"53","hashOfConfig":"29"},{"size":1650,"mtime":1615087778534,"results":"54","hashOfConfig":"29"},{"size":1117,"mtime":1615088614688,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"7xp2xm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sg0307091/checkouts/life2-ui/src/reportWebVitals.js",[],["121","122"],"/Users/sg0307091/checkouts/life2-ui/src/App.tsx",["123"],"import React, { FunctionComponent, useState, useEffect, useContext } from \"react\";\nimport \"./styles/styles.css\";\nimport \"./styles/neat.css\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { Home } from \"./pages\";\nimport ArtifactContext from \"./contexts/ArtifactContext\";\nimport NeatContext from \"./contexts/NeatContext\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport CorrespondenceAPI from \"./hooks/correspondenceApi\";\nimport Neat from \"./pages/Neat\";\n\nconst App: FunctionComponent<{}> = () => {\n\n  useEffect(() => {\n    let token = CorrespondenceAPI.getAuthorizationToken();\n    sessionStorage.setItem(\"token\", token);\n  }, []);\n\n  const [artifactContext] = useContext(ArtifactContext);\n  const artifactContextState = useState(artifactContext);\n\n  const [neatContext] = useContext(NeatContext);\n  const neatContextState = useState(neatContext);\n\n  return (\n\n    <ErrorBoundary>\n      <ArtifactContext.Provider value={artifactContextState}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </ArtifactContext.Provider>\n      <NeatContext.Provider value={neatContextState}>\n        <Switch>\n          <Route exact path=\"/neat\" component={Neat} />\n        </Switch>\n      </NeatContext.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n",["124","125"],"/Users/sg0307091/checkouts/life2-ui/src/pages/index.ts",[],"/Users/sg0307091/checkouts/life2-ui/src/pages/Home.tsx",["126"],"import React, { useEffect } from \"react\";\nimport Counts from \"../components/Home/Counts\";\nimport Inputs from \"../components/Home/Inputs\";\nimport Results from \"../components/Home/Results\";\nimport Feature from \"../components/Home/Feature\";\n\nconst Home = () => {\n    return (\n        <>\n            <Inputs />\n            <Counts />\n            <Results />\n            <Feature />\n        </>\n    );\n};\n\nexport default Home;\n","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Feature.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Home/Counts.tsx",["127","128","129","130"],"import React, { useContext, useState } from \"react\";\nimport { rangeOfMonths } from \"../../utils/data.json\";\nimport ArtifactContext from \"../../contexts/ArtifactContext\";\nimport MonthBox from \"./MonthBox\"\n\nconst Counts = () => {\n\n    const [artifactsContext, setArtifactsContext] = useContext(ArtifactContext);\n    const { searchRequest, countsResponse, maxBoxCount, monthSelected } = artifactsContext;\n\n    return (\n        <div className=\"grid\" id=\"counts\">\n            <div>&nbsp;</div>\n            {rangeOfMonths.map((m, index) => {\n                return (\n                    <div key={index} className=\"month-name\" data-ng-repeat=\"m in rangeOfMonths\">{m}</div>\n                );\n            })}\n            {/*   <div>&nbsp;</div><!-- empty top left corner -->\n        <div class=\"month-name\" data-ng-repeat=\"m in rangeOfMonths\">{{ m }}</div>\n         <div\n                id=\"{{'month-box' + $index}}\"\n                ng-class=\"monthBox.count != 0 && !monthBox.header ? 'month-box' : 'plain-month-box'\"\n                data-ng-repeat=\"monthBox in monthBoxes\"\n                data-ng-click=\"monthBox.count != 0 && search($index, monthBox.year, monthBox.month)\"\n                ng-style=\"{'background-color' : $index == monthSelected && 'rgba(155, 0, 0, 0.5)' || 'rgba(155,155,155,' + monthBox.count / maxBoxCount * 1.25 + ')', 'border': $index == monthSelected && '1px solid red' || monthBox.count != 0 && !monthBox.header && '1px solid gray' || '1px solid white'}\"\n                title=\"{{!monthBox.header && prettyMonthify(monthBox.year, monthBox.month) + ' (' + monthBox.count + ')' }}\">\n            {{ monthBox.header && monthBox.year.toString().substr(2,3) || '' }}\n        </div> */}\n            {countsResponse.map((monthBox, index) => {\n                return (\n                    <MonthBox \n                    key={`${monthBox.year}.${monthBox.month}`} \n                    monthBox={monthBox} \n                    selected={false} \n                    maxBoxCount={maxBoxCount} />\n                )\n            })}\n        </div>\n    );\n};\n\nexport default Counts;","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Results.tsx",["131","132"],"import React, { useContext } from \"react\";\nimport ArtifactContext from \"../../contexts/ArtifactContext\";\nimport CorrespondenceApi from \"../../hooks/correspondenceApi\";\nimport ResultRow from \"./ResultRow\";\n\nconst Results = () => {\n\n    const [artifactsContext, setArtifactsContext] = useContext(ArtifactContext);\n    const { searchResponse } = artifactsContext;\n\n    return (\n        <div id=\"results\">\n        {/* <div class=\"artifact-link\" data-ng-repeat=\"artifact in artifacts\" id=\"{{'artifact' + $index}}\">\n            <div data-ng-click=\"read($index, artifact.trove, artifact.key)\">\n                <div class=\"artifact-link-col\">{{ $index + 1 }}. {{ prettyDateify(artifact.sent) }}</div>\n                <div class=\"artifact-link-col\">\n                    {{ artifact.from_email + ' -> ' + artifact.to_emails.join(', ') }}\n                </div>\n                <div class=\"artifact-link-col\">{{ '[' + artifact.subject + ']' }}</div>\n            </div>\n        </div> */}\n        {searchResponse.map((artifact, index) => {\n                return (\n                  <ResultRow artifact={artifact} index={index}/>\n                )\n            })}\n    </div>\n    );\n};\n\nexport default Results;","/Users/sg0307091/checkouts/life2-ui/src/components/Home/Inputs.tsx",["133","134","135"],"import React, { useContext, useState } from \"react\";\nimport CorrespondenceApi  from \"../../hooks/correspondenceApi\";\nimport ArtifactContext from \"../../contexts/ArtifactContext\";\nimport { rangeOfYearMonthsWithCounts } from \"../../utils/Utils\";\n\nconst Inputs = () => {\n\n    const [artifactsContext, setArtifactsContext] = useContext(ArtifactContext);\n    const { countsRequest, searchRequest, from, to } = artifactsContext;\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const updateToken = () => {\n        sessionStorage.setItem(\"token\", Buffer.from(`${username}:${password}`).toString('base64'));\n    }\n\n    const updateFrom = (from: string) => {\n        setArtifactsContext({\n            ...artifactsContext, \n            \"from\" : from.trim().length == 0 ? [] : from.split(/[ ,]+/)\n        })\n    }\n\n    const updateTo = (to: string) => {\n        setArtifactsContext({\n            ...artifactsContext, \n            \"to\" : to.trim().length == 0 ? [] : to.split(/[ ,]+/)\n        })\n    }\n\n    const counts = async () => {\n        updateToken();\n\n        if (true) {\n          CorrespondenceApi.artifactCounts({...countsRequest, \"from\": from, \"to\": to})\n            .then((response) => {\n                let [response2, maxBoxCount] = rangeOfYearMonthsWithCounts(1994, 2021, response)\n                setArtifactsContext({\n                    ...artifactsContext, \n                    \"countsResponse\" : response2,\n                    \"maxBoxCount\" : maxBoxCount\n                });\n            })\n            .catch(() => {\n              alert(\"error\");\n            });\n        } else {\n        }\n      };\n\n      function onKeyPress(event) {\n        var code = event.keyCode || event.which;\n        if(code === 13) { //13 is the enter keycode\n            counts();\n        } \n    }\n\n    return (\n        <p className=\"input\" onKeyPress={onKeyPress}>\n\n            username: <input type=\"text\" onChange={({ target }) => { setUsername(target.value) }}></input>\n            password: <input type=\"password\" onChange={({ target }) => { setPassword(target.value) }}></input>\n            <button onClick={counts}><i>go !</i></button>\n\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    from: <input type=\"text\" onChange={({ target }) => { updateFrom(target.value) }} />\n    to: <input type=\"text\" onChange={({ target }) => { updateTo(target.value) }} />\n\n        </p>\n    );\n};\n\nexport default Inputs;","/Users/sg0307091/checkouts/life2-ui/src/ErrorBoundary.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/ErrorMessage.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/index.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/contexts/ArtifactContext.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/hooks/correspondenceApi.ts",["136"],"/Users/sg0307091/checkouts/life2-ui/src/utils/Utils.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Home/MonthBox.tsx",["137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, { useContext } from \"react\";\nimport { ArtifactCountsResponse, ArtifactSearchRequest } from \"../../models\";\nimport CorrespondenceApi from \"../../hooks/correspondenceApi\";\nimport searchRequest from \"../../utils/requestTemplates.json\";\nimport ArtifactContext from \"../../contexts/ArtifactContext\";\nimport { startOfMonth, endOfMonth } from \"../../utils/Utils\";\n\nconst MonthBox = (props) => {\n\n    const [artifactsContext, setArtifactsContext] = useContext(ArtifactContext);\n    const { searchRequest, from, to } = artifactsContext;\n\n    const { monthBox, selected, index, maxBoxCount } = props;\n    const { count, year, month, header} = monthBox;\n    const after = startOfMonth(year, month);\n    const before = endOfMonth(year, month)\n    const request: ArtifactSearchRequest = {\n        ...searchRequest,\n        \"after\" : after,\n        \"before\" : before,\n        \"from\" : from,\n        \"to\" : to\n    }\n\n    const monthBoxClick = async () => {\n\n        CorrespondenceApi.artifactSearch(request)\n            .then((response) => {\n                setArtifactsContext({\n                    ...artifactsContext,\n                    \"searchResponse\": response\n                });\n            })\n            .catch(() => {\n                alert(\"error\");\n            });\n    };\n\n    let className = count != 0 && !header ? 'month-box' : 'plain-month-box';\n    let background = index == selected && 'rgba(155, 0, 0, 0.5)' || 'rgba(155,155,155,' + count / maxBoxCount * 1.25 + ')' || 'rgba(155,155,155,0)';\n    let border = index == selected && '1px solid red' || count > 0 && '1px solid gray' || '1px solid white'\n    return (\n        <div\n            className={`${className}`}\n            style={{ background: `${background}`, border: `${border}` }}\n            key={`${year}.${month}.${count}`}\n            onClick={monthBoxClick}\n        >\n            {header && year.toString().substr(2, 3) || ''} \n            {/* !monthBox.header && monthBox.count */}\n        </div>\n    )\n\n}\n\nexport default MonthBox;","/Users/sg0307091/checkouts/life2-ui/src/components/Home/ResultRow.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/pages/Neat.tsx",["150","151"],"/Users/sg0307091/checkouts/life2-ui/src/hooks/neatApi.ts",["152"],"import {\n    NeatFile\n} from \"../models\";\nimport CorrespondenceAPI from \"./correspondenceApi\";\n\ninterface ICorrespondenceAPI {\n    getAuthorizationToken: () => Promise<string>;\n    listNeatFolders: () => Promise<string[]>;\n    readNeatFolder: (folder: string) => Promise<NeatFile[]>;\n    readNeatFile: (folder: string, filename: string) => Promise<NeatFile>;\n}\n\nclass NeatAPI {\n\n    public static listNeatFolders = async () => {\n        let response = await NeatAPI.request<string[]>(`neat`);\n        return response;\n    };\n\n    public static readNeatFolder = async (folder: string) => {\n        let response = await NeatAPI.request<NeatFile[]>(`neat/${folder}`);\n        return response;\n    };\n\n    public static readNeatFile = async (folder: string, filename: string) => {\n        let response = await NeatAPI.request<NeatFile>(`neat/${folder}/${filename}`);\n        return response;\n    };\n\n    private static request = async <T, B = void>(\n        url: string,\n        method = \"get\",\n        body: B | undefined = undefined,\n        headers = {}\n      ): Promise<T> => {\n        const res = await fetch(url, {\n          method: method.toUpperCase(),\n          body: typeof body === \"object\" ? JSON.stringify(body) : undefined,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Basic ${sessionStorage.getItem(\"token\")}`\n          },\n        });\n        let data = await res.json();\n        return data;\n      };\n}\n\nexport default NeatAPI;","/Users/sg0307091/checkouts/life2-ui/src/contexts/NeatContext.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/NeatFolder.tsx",["153","154"],"import React, { useContext } from \"react\";\nimport NeatContext from \"../../contexts/NeatContext\";\nimport NeatAPI from \"../../hooks/neatApi\";\nimport { NoteBox } from \"../../models\";\nimport { initNoteBox } from \"../../utils/NeatUtils\";\n\nconst NeatFolder = (props) => {\n    \n    const { folder, index, setSelectedIndex } = props;\n\n    const [neatContext, setNeatContext] = useContext(NeatContext);\n    const { folder : neatFolder, noteBoxes, notes } = neatContext;\n\n    const loadFolder = () => {\n\n        loadNoteBox();\n        setSelectedIndex(1);\n    }\n\n    const syncNoteBoxContext = (folder: string, noteBox: NoteBox) => {\n        setNeatContext({\n            ...neatContext,\n            folder: folder,\n            noteBox: noteBox,\n            notes: noteBox.notes,\n            file: null as any,\n        })\n    }\n\n    const loadNoteBox = () => {\n        if (!noteBoxes[folder]) {\n            NeatAPI.readNeatFolder(folder)\n                .then((response) => {\n                    noteBoxes[folder] = initNoteBox(folder, response);\n                    syncNoteBoxContext(folder, noteBoxes[folder]);\n                }).catch(() => {\n                    alert(\"error\");\n                });\n        } else {\n            syncNoteBoxContext(folder, noteBoxes[folder]);\n        }\n    }\n    \n    return(\n        <div             \n        \n        key={`neat-folder-${index}`}\n\n        className={`neat-folder ${folder == neatFolder ? 'selected' : ''}`} \n        onClick={loadFolder}>{folder.split(\"-\").join(\" \")}</div>     \n    )\n}\n\nexport default NeatFolder;","/Users/sg0307091/checkouts/life2-ui/src/components/Neat/Results.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/NeatItem.tsx",["155","156","157","158","159","160","161","162"],"import { getByDisplayValue } from \"@testing-library/react\";\nimport React, { useContext } from \"react\";\nimport NeatContext from \"../../contexts/NeatContext\";\nimport { NeatFile } from \"../../models\";\nimport Draggable from \"react-draggable\";\nimport { reorder } from \"../../utils/NeatUtils\";\n\nconst NeatItem = (props) => {\n\n  const { note, item, index, setSelectedIndex } = props;\n\n  const [neatContext, setNeatContext] = useContext(NeatContext);\n  const { noteBoxes, folder, notes, fileIndex, noteBox, note : currentNote } = neatContext;\n  const isCurrent = note.file?.filename == currentNote?.file?.filename;\n\n  const move = (count: number) => {\n\n    let nextIndex = fileIndex ? fileIndex + count : 0;\n\n    setNeatContext({\n      ...neatContext,\n      fileIndex: nextIndex,\n      file: notes[nextIndex].file\n    })\n  }\n\n  function onKeyPress(event) {\n    var code = event.keyCode || event.which;\n    if (code === 13) { //13 is the enter keycode\n      move(1);\n    } else if (code === 24) {\n      move(-1);\n    } else if (code === 25) {\n      move(1);\n    }\n  }\n\n\n  if (note) {\n\n    return (\n      <div\n        tabIndex={index}\n        onKeyPress={onKeyPress}\n        key={`${note.file?.filename}`}\n        id={`${note.file?.filename}`}\n        className={`neat-item ${isCurrent ? 'selected' : ''}`}\n        onClick={() => {\n          setNeatContext({\n            ...neatContext,\n            file: note.file,\n            fileIndex: index,\n            note: note,\n            comment: note.text\n          });\n          setSelectedIndex(2);\n        }}\n      >\n        {displayName(note.file)} {note.text}\n      </div>\n\n    )\n  } else {\n    return (<></>)\n  }\n}\n\nfunction displayName(file?: NeatFile) {\n\n  if (!file) return;\n  let val = file.filename.substring(0, 1);\n  if (file.title) val = val + \" \" + file.title;\n  if (file.index) val = val + \" \" + file.index;\n  if (file.page) val = val + \".\" + file.page;\n\n  return val;\n}\n\nexport default NeatItem;","/Users/sg0307091/checkouts/life2-ui/src/utils/NeatUtils.tsx",["163"],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/FolderPane.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/ListPane.tsx",[],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/FeaturePane.tsx",["164","165","166","167","168","169"],"/Users/sg0307091/checkouts/life2-ui/src/components/Neat/CommentaryPane.tsx",["170","171","172"],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":25,"nodeType":"179","messageId":"180","endLine":4,"endColumn":35},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"181","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"182","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"177","severity":1,"message":"183","line":8,"column":30,"nodeType":"179","messageId":"180","endLine":8,"endColumn":49},{"ruleId":"177","severity":1,"message":"184","line":9,"column":13,"nodeType":"179","messageId":"180","endLine":9,"endColumn":26},{"ruleId":"177","severity":1,"message":"185","line":9,"column":57,"nodeType":"179","messageId":"180","endLine":9,"endColumn":70},{"ruleId":"177","severity":1,"message":"186","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"183","line":8,"column":30,"nodeType":"179","messageId":"180","endLine":8,"endColumn":49},{"ruleId":"177","severity":1,"message":"184","line":9,"column":28,"nodeType":"179","messageId":"180","endLine":9,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":21,"column":41,"nodeType":"189","messageId":"190","endLine":21,"endColumn":43},{"ruleId":"187","severity":1,"message":"188","line":28,"column":37,"nodeType":"189","messageId":"190","endLine":28,"endColumn":39},{"ruleId":"177","severity":1,"message":"191","line":9,"column":11,"nodeType":"179","messageId":"180","endLine":9,"endColumn":29},{"ruleId":"177","severity":1,"message":"192","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":32},{"ruleId":"177","severity":1,"message":"193","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"187","severity":1,"message":"194","line":39,"column":27,"nodeType":"189","messageId":"190","endLine":39,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":40,"column":28,"nodeType":"189","messageId":"190","endLine":40,"endColumn":30},{"ruleId":"195","severity":1,"message":"196","line":40,"column":40,"nodeType":"197","messageId":"198","endLine":40,"endColumn":42},{"ruleId":"195","severity":1,"message":"196","line":40,"column":66,"nodeType":"197","messageId":"198","endLine":40,"endColumn":68},{"ruleId":"187","severity":1,"message":"188","line":41,"column":24,"nodeType":"189","messageId":"190","endLine":41,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":41,"column":36,"nodeType":"197","messageId":"198","endLine":41,"endColumn":38},{"ruleId":"195","severity":1,"message":"196","line":41,"column":55,"nodeType":"197","messageId":"198","endLine":41,"endColumn":57},{"ruleId":"195","severity":1,"message":"199","line":41,"column":55,"nodeType":"197","messageId":"198","endLine":41,"endColumn":57},{"ruleId":"195","severity":1,"message":"199","line":41,"column":68,"nodeType":"197","messageId":"198","endLine":41,"endColumn":70},{"ruleId":"195","severity":1,"message":"196","line":49,"column":21,"nodeType":"197","messageId":"198","endLine":49,"endColumn":23},{"ruleId":"195","severity":1,"message":"196","line":49,"column":53,"nodeType":"197","messageId":"198","endLine":49,"endColumn":55},{"ruleId":"177","severity":1,"message":"200","line":10,"column":22,"nodeType":"179","messageId":"180","endLine":10,"endColumn":33},{"ruleId":"177","severity":1,"message":"201","line":11,"column":22,"nodeType":"179","messageId":"180","endLine":11,"endColumn":33},{"ruleId":"177","severity":1,"message":"191","line":6,"column":11,"nodeType":"179","messageId":"180","endLine":6,"endColumn":29},{"ruleId":"177","severity":1,"message":"202","line":12,"column":45,"nodeType":"179","messageId":"180","endLine":12,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":48,"column":42,"nodeType":"189","messageId":"190","endLine":48,"endColumn":44},{"ruleId":"177","severity":1,"message":"203","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":27},{"ruleId":"177","severity":1,"message":"204","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":17},{"ruleId":"177","severity":1,"message":"205","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"177","severity":1,"message":"206","line":10,"column":17,"nodeType":"179","messageId":"180","endLine":10,"endColumn":21},{"ruleId":"177","severity":1,"message":"207","line":13,"column":11,"nodeType":"179","messageId":"180","endLine":13,"endColumn":20},{"ruleId":"177","severity":1,"message":"208","line":13,"column":22,"nodeType":"179","messageId":"180","endLine":13,"endColumn":28},{"ruleId":"177","severity":1,"message":"209","line":13,"column":48,"nodeType":"179","messageId":"180","endLine":13,"endColumn":55},{"ruleId":"187","severity":1,"message":"188","line":14,"column":41,"nodeType":"189","messageId":"190","endLine":14,"endColumn":43},{"ruleId":"177","severity":1,"message":"210","line":1,"column":19,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"182","line":1,"column":22,"nodeType":"179","messageId":"180","endLine":1,"endColumn":30},{"ruleId":"177","severity":1,"message":"211","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":22},{"ruleId":"177","severity":1,"message":"212","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":18},{"ruleId":"177","severity":1,"message":"213","line":10,"column":35,"nodeType":"179","messageId":"180","endLine":10,"endColumn":39},{"ruleId":"177","severity":1,"message":"214","line":25,"column":14,"nodeType":"179","messageId":"180","endLine":25,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":40,"column":17,"nodeType":"217","endLine":40,"endColumn":64},{"ruleId":"177","severity":1,"message":"218","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"207","line":8,"column":13,"nodeType":"179","messageId":"180","endLine":8,"endColumn":22},{"ruleId":"177","severity":1,"message":"219","line":10,"column":12,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'setArtifactsContext' is assigned a value but never used.","'searchRequest' is assigned a value but never used.","'monthSelected' is assigned a value but never used.","'CorrespondenceApi' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ICorrespondenceAPI' is defined but never used.","'ArtifactCountsResponse' is defined but never used.","'searchRequest' is defined but never used.","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'notes' is assigned a value but never used.","'getByDisplayValue' is defined but never used.","'Draggable' is defined but never used.","'reorder' is defined but never used.","'item' is assigned a value but never used.","'noteBoxes' is assigned a value but never used.","'folder' is assigned a value but never used.","'noteBox' is assigned a value but never used.","'Note' is defined but never used.","'CommentaryPane' is defined but never used.","'Commentary' is defined but never used.","'note' is assigned a value but never used.","'onKeyPress' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]